
@function svg-url-encode($string) {
  $map: (
    '%': '%25',
    '<': '%3C',
    '>': '%3E',
    ' ': '%20',
    '!': '%21',
    '*': '%2A',
    "'": '%27',
    '"': '%22',
    '(': '%28',
    ')': '%29',
    ';': '%3B',
    ':': '%3A',
    '@': '%40',
    '&': '%26',
    '=': '%3D',
    '+': '%2B',
    '$': '%24',
    ',': '%2C',
    '/': '%2F',
    '?': '%3F',
    '#': '%23',
    '[': '%5B',
    ']': '%5D',
  );
  $new: $string;
  @each $search, $replace in $map {
    $new: #{svg-str-replace($new, $search, $replace)};
  }
  @return $new;
}

@function inline-svg($string) {
  @return url('data:image/svg+xml;utf8,#{svg-url-encode($string)}');
}


/**
* functions to urlencode the svg string
*/
@function svg-str-replace($string, $search, $replace: '', $recursive: 0) {
  $index: str-index($string, $search);

  // we are using a "while" loop instead of recursion, because recent Sass versions have a recursion limit that we would sometimes hit...
  @while $index {
    $string: str-slice($string, 1, $index - 1) +
      $replace +
      str-slice($string, $index + str-length($search));
    $index: str-index($string, $search);
  }
  @return $string;
}
